version: '3.5'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es01
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch2
      cluster.initial_master_nodes: es01,es02
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9200}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9300}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PERSISTENCE_DIR}/elasticsearch:/usr/share/elasticsearch/data
      - ${LOG_DIR}/elasticsearch:/usr/share/elasticsearch/logs
    depends_on:
      - elasticsearch2

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_EASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es02
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch
      cluster.initial_master_nodes: es01,es02
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9201}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9301}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      # node.max-local-storage-nodesが非推奨となったためデータパスは異なるものとした https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html
      - ${PERSISTENCE_DIR}/elasticsearch2:/usr/share/elasticsearch/data
      - ${LOG_DIR}/elasticsearch:/usr/share/elasticsearch/log

  public_db:
    image: postgres:13.3
    ports:
      - 5432:5432
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/public_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/public_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PUBLIC_DB_USER}
      POSTGRES_PASSWORD: ${PUBLIC_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${PUBLIC_DB_INITDB_ARGS}
      POSTGRES_DB: ${PUBLIC_DB}

  repos_db:
    image: postgres:13.3
    ports:
      - 5433:5432
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/repos_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/repos_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${REPOS_DB_USER}
      POSTGRES_PASSWORD: ${REPOS_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${REPOS_DB_INITDB_ARGS}
      POSTGRES_DB: ${REPOS_DB}

  batch:
    image: ddbj-batch/boot:0.0.1
    build:
      context: ${PWD}/docker/batch
    depends_on:
      - public_db
      - elasticsearch
      - elasticsearch2
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/batch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/batch:/batch
      - ${DATA_DIR}:/data_dir
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    environment:
      ES_HOST: elasticsearch
      ES_PORT: 9200
      ACTION: ${ACTION}
      DATE: ${DATE}

  api:
    image: ddbj-api/boot:0.0.1
    build:
      context: ${PWD}/docker/api
    depends_on:
      - public_db
    ports:
      - "8080:8080"
      - "5050:5050"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/api/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/api:/api
      - ${PERSISTENCE_DIR}/file:/data
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    restart: always
    environment:
      ENV: ${ENV}

  front:
    image: node:12.12.0
    ports:
      - "3000:3000"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - "./front:/front"
    working_dir: /front
    command: [sh, -c, yarn install;yarn run dev]
    restart: always

  ftpd:
    image: stilliard/pure-ftpd
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    #    user: ${UID:-0}:${GID:-0}
    volumes: # remember to replace /folder_on_disk/ with the path to where you want to store the files on the host machine
      - ./data/ftp/data:/home/${FTP_USER_NAME}
      - ./data/ftp/passwd:/etc/pure-ftpd/passwd
    # uncomment for ssl/tls, see https://github.com/stilliard/docker-pure-ftpd#tls
    #      - "/folder_on_disk/ssl:/etc/ssl/private/"
    environment:
      PUBLICHOST: "localhost"
      FTP_USER_NAME: ${FTP_USER_NAME}
      FTP_USER_PASS: ${FTP_USER_PASS}
      FTP_USER_HOME: /home/${FTP_USER_NAME}
    # also for ssl/tls:
    #      ADDED_FLAGS: "--tls=2"

networks:
  default:
    name: ddbj_ld
