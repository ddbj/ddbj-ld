version: "3.7"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: ddbjld-elasticsearch-dev
    environment:
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: ddbjld_elasticsearch_passwd
      ES_JAVA_OPTS: "-Xmx8g -Xms8g"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es01
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PERSISTENCE_DIR}/elasticsearch:/usr/share/elasticsearch/data
      - ${LOG_DIR}/elasticsearch:/usr/share/elasticsearch/logs
    restart: "unless-stopped"

  public_db:
    image: postgres:13.3
    container_name: ddbjld-public_db-dev
    ports:
      - "127.0.0.1:5432:5432"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/public_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/public_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${PUBLIC_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_DB: public_db
    restart: "unless-stopped"
    init: true

  repos_db:
    image: postgres:13.3
    container_name: ddbjld-repos_db-dev
    ports:
      - "127.0.0.1:5433:5432"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/repos_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/repos_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${REPOS_DB_USER}
      POSTGRES_PASSWORD: ${REPOS_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_DB: repos_db
    restart: "unless-stopped"
    init: true

  batch:
    build:
      context: ./docker/batch
      dockerfile: Dockerfile
    image: ddbjld-batch-dev:0.0.1
    container_name: ddbjld-batch-dev
    depends_on:
      - public_db
      - elasticsearch
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/batch:/batch
      - ${DATA_DIR}:/data_dir
      # === 環境依存部分 ===
      - /lustre9/open/database/ddbjshare/private/ddbj.nig.ac.jp/jga/metadata:/ext_data/jga
      - /mirror/meta/list/livelist:/ext_data/sra/livelist
      - /usr/local/resources/bioproject/ddbj_core_bioproject.xml:/ext_data/bioproject/ddbj_core_bioproject.xml
      - /usr/local/resources/biosample/ddbj_biosample_set.xml.gz:/ext_data/biosample/ddbj_biosample_set.xml.gz
      - /usr/local/resources/dra/fastq:/ext_data/sra/fastq
      - /usr/local/resources/dra/sralite/ByExp/litesra:/ext_data/sra/sra
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    environment:
      ES_HOST: elasticsearch
      ES_PORT: 9200
      ACTION: ${ACTION:-init}
      DATE: ${DATE:-init}
      ENV: dev
    restart: "unless-stopped"
    init: true

  api:
    image: ddbjld-api-dev:0.0.1
    build:
      context: ./docker/api
      dockerfile: Dockerfile
    container_name: ddbjld-api-dev
    depends_on:
      - public_db
      - repos_db
      - elasticsearch
    ports:
      - "127.0.0.1:8080:8080"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/api:/api
      - ${PERSISTENCE_DIR}/file:/data
      # === 環境依存 ===
      # - /usr/local/resources/jvar:/resources/jvar
      - /usr/local/resources/bioproject:/resources/bioproject
      - /usr/local/resources/biosample:/resources/biosample
      - /usr/local/resources/trad:/resources/trad
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    environment:
      ENV: dev
    restart: "unless-stopped"
    init: true

  front:
    image: ddbjld-front-dev:1
    build:
      context: ./front
      dockerfile: Dockerfile-dev
    container_name: ddbjld-front-dev
    volumes:
      - ${PWD}/front:/app
      - node_modules:/app/node_modules
    ports:
      - "127.0.0.1:3000:3000"
    user: ${UID:-0}:${GID:-0}
    command: ["yarn", "run", "dev"]
    restart: "unless-stopped"
    init: true

networks:
  default:
    name: ddbjld-network-dev

volumes:
  node_modules:
    name: ddbjld-front-dev-node_modules
