version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: ${DDBJLD_ELASTICSEARCH_CONTAINER_NAME:-ddbjld_elasticsearch}
    environment:
      bootstrap.memory_lock: "true"
      discovery.type: ${DDBJLD_ELASTICSEARCH_DISCOVERY_TYPE:-single-node}
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      TAKE_FILE_OWNERSHIP: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - ddbj_ld
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9200}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9300}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.elasticsearch.sh"]
    volumes:
      - ${PWD}/config/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/config/entrypoint.elasticsearch.sh:/usr/local/bin/entrypoint.elasticsearch.sh
      - ${PWD}/data/elasticsearch:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/logs

  postgresql:
    image: postgres:12.0
    container_name: postgresql
    networks:
      - ddbj_ld
    ports:
      - 5432:5432
    volumes:
      - ${PWD}/config/postgresql/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_DB: ${POSTGRES_DB}
      hostname: ${DDBJ_HOSTNAME}
      restart: always
      user: ${POSTGRES_USER}

  app:
    build: .
    image: ddbj-app/boot:0.0.1
    depends_on:
    - postgresql
    ports:
    - "8080:8080"
    volumes:
    - ${PWD}/app:/app
    environment:
      JAR_TARGET: ddbj-0.0.1-SNAPSHOT.jar
    build: 
      context: ${PWD}/app
    networks:
      - ddbj_ld

  next:
    image: node:12.12.0
    container_name: next
    hostname: next
    volumes:
      - "${PWD}/front:/front"
    working_dir: /front
    command: [sh, -c, npm install;npm run build;npm run start]
    ports:
      - "3000:3000"
    networks:
      - ddbj_ld

networks:
  ddbj_ld:
    external:
      name: ddbj_ld
