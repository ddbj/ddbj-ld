/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ddbjld.api.app.controller.v1.entry.jvar;

import ddbjld.api.data.response.v1.entry.jvar.TokenResponse;
import ddbjld.api.data.response.v1.entry.jvar.UserResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.UUID;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-12T15:36:38.385906+09:00[Asia/Tokyo]")
@Api(value = "auth", description = "the auth API")
public interface AuthApi {

    @ApiOperation(value = "login and get user info", nickname = "getLoginUserInfo", notes = "", response = UserResponse.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = UserResponse.class),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/auth/login/{code}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<UserResponse> getLoginUserInfo(@ApiParam(value = "Authorization code for OAuth2 from OpenAM",required=true) @PathVariable("code") UUID code
);


    @ApiOperation(value = "request new accessToken", nickname = "refreshAccessToken", notes = "", response = TokenResponse.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TokenResponse.class),
        @ApiResponse(code = 400, message = "Bad Request") })
    @RequestMapping(value = "/auth/login/{accountUUID}/refresh",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<TokenResponse> refreshAccessToken(@ApiParam(value = "t_account.uuid",required=true) @PathVariable("accountUUID") UUID accountUUID
);

}

