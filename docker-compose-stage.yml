version: '3.5'
services:
  elasticsearch_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms8G -Xmx8G"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es01
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch2_stage,elasticsearch3_stage, elasticsearch4_stage
      node.max_local_storage_nodes: 4
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9202}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9302}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/data/elasticsearch:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/logs
    depends_on:
      - elasticsearch2_stage
      - elasticsearch3_stage
      - elasticsearch4_stage
    restart: always

  elasticsearch2_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_EASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms8G -Xmx8G"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es02
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch_stage,elasticsearch3_stage, elasticsearch4_stage
      node.max_local_storage_nodes: 3
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-19201}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-19301}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/data/elasticsearch:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/log
    restart: always

  elasticsearch3_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_EASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms8G -Xmx8G"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es03
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch_stage,elasticsearch2_stage,elasticsearch4_stage
      node.max_local_storage_nodes: 3
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-19202}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-19302}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/data/elasticsearch:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/log
    restart: always

  elasticsearch4_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      bootstrap.memory_lock: "true"
      # Kibanaで使うelasticユーザーのパスワードのためKibanaを使用するなら設定する https://qiita.com/hinatades/items/99e5e1863b2016c9e1ba
      ELASTIC_PASSWORD: ${DDBJLD_EASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms8G -Xmx8G"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es04
      # https://www.elastic.co/guide/en/elasticsearch/reference/7.14/modules-discovery-settings.html
      discovery.seed_hosts: elasticsearch_stage,elasticsearch2_stage,elasticsearch3_stage
      node.max_local_storage_nodes: 4
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-19203}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-19303}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/data/elasticsearch:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/log
    restart: always

  public_db_stage:
    image: postgres:13.3
    container_name: ${DDBJLD_POSTGRESQL_CONTAINER_NAME:-ddbjld_public_db_stage}
    ports:
      - 15432:5432
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/public_db/init:/docker-entrypoint-initdb.d
      - ${PWD}/data/public_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PUBLIC_DB_USER}
      POSTGRES_PASSWORD: ${PUBLIC_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${PUBLIC_DB_INITDB_ARGS}
      POSTGRES_DB: ${PUBLIC_DB}
    restart: always

  repos_db_stage:
    image: postgres:13.3
    ports:
      - 15433:5432
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/repos_db/init:/docker-entrypoint-initdb.d
      - ${PWD}/data/repos_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${REPOS_DB_USER}
      POSTGRES_PASSWORD: ${REPOS_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${REPOS_DB_INITDB_ARGS}
      POSTGRES_DB: ${REPOS_DB}
    restart: always

  batch_stage:
    build:
      context: ${PWD}/docker/batch
    image: ddbj-batch/boot:0.0.1
    depends_on:
      - public_db_stage
      - elasticsearch_stage
      - elasticsearch2_stage
      - elasticsearch3_stage
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/batch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/batch:/batch
      - /gpfs1/dpl0/ddbjshare/private/ddbj.nig.ac.jp/jga/metadata:/data/jga
      - /data1/Metadata/others/SRA_Accessions:/data/others/SRA_Accessions
      - /usr/local/resources/bioproject:/data/bioproject
      - /data1/Metadata/biosample/:/data/biosample
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    environment:
      ES_HOST: elasticsearch_stage
      ES_PORT: 9200
      TARGET_DB: ${TARGET_DB}

  api_stage:
    image: openjdk:11-slim
    depends_on:
      - public_db_stage
    ports:
      - "8092:8080"
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${PWD}/docker/api/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/api:/api
      - ${PWD}/data/file:/data
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    restart: always
    environment:
      ENV: ${ENV}
    extra_hosts:
      - "gw1:172.19.18.250"

  front_stage:
    image: node:12.12.0
    volumes:
      - "./front:/front"
    ports:
      - "3001:3000"
    user: ${UID:-0}:${GID:-0}
    working_dir: /front
    command: [sh, -c, yarn install;yarn build;yarn run start]
    restart: always

networks:
  default:
    name: ddbj_ld_stage
