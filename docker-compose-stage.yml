version: '3'
services:
  elasticsearch_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: ${DDBJLD_ELASTICSEARCH_CONTAINER_NAME:-ddbjld_elasticsearch_stage}
    environment:
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms30g -Xmx30g"
      path.data: /usr/share/elasticsearch/data
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es01
      discovery.zen.ping.unicast.hosts: ddbjld_elasticsearch2_stage
      node.max_local_storage_nodes: 2
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - ddbj_ld_stage
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9202}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9302}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.elasticsearch.sh"]
    volumes:
      - ${PWD}/config/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/config/entrypoint.elasticsearch.sh:/usr/local/bin/entrypoint.elasticsearch.sh
      - ${PWD}/data/es:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/logs
    restart: always

  elasticsearch2_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: ${DDBJLD_ELASTICSEARCH_CONTAINER_NAME:-ddbjld_elasticsearch2_stage}
    environment:
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms30g -Xmx30g"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es02
      path.data: /usr/share/elasticsearch/data
      node.max_local_storage_nodes: 2
      discovery.zen.ping.unicast.hosts: ddbjld_elasticsearch_stage
      cluster.initial_master_nodes: es01
    depends_on:
      - elasticsearch_stage
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - ddbj_ld_stage
    ports:
      - ${DDBJLD_ELASTICSEARCH_PORT_HTTP:-9203}:9200
      - ${DDBJLD_ELASTICSEARCH_PORT_NODE:-9303}:9300
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.elasticsearch.sh"]
    volumes:
      - ${PWD}/config/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/config/entrypoint.elasticsearch.sh:/usr/local/bin/entrypoint.elasticsearch.sh
      - ${PWD}/data/es:/usr/share/elasticsearch/data
      - ${PWD}/logs/elasticsearch:/usr/share/elasticsearch/log
    restart: always

  public_db_stage:
    image: postgres:12.0
    container_name: ${DDBJLD_POSTGRESQL_CONTAINER_NAME:-ddbjld_public_db_stage}
    networks:
      - ddbj_ld_stage
    ports:
      - 15432:5432
    volumes:
      - ${PWD}/config/public_db/init:/docker-entrypoint-initdb.d
      - ${PWD}/data/psql/:/var/lib/public_db/data
    environment:
      POSTGRES_USER: ${PUBLIC_DB_USER}
      POSTGRES_PASSWORD: ${PUBLIC_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${PUBLIC_DB_INITDB_ARGS}
      POSTGRES_DB: ${PUBLIC_DB}
      hostname: ${PUBLIC_DB_HOSTNAME}
      restart: always
      user: ${PUBLIC_DB_USER}

  jvar_db_stage:
    image: postgres:12.0
    networks:
      - ddbj_ld_stage
    ports:
      - 15433:5432
    volumes:
      - ${PWD}/config/jvar_db/init:/docker-entrypoint-initdb.d
      - ${PWD}/data/jvar_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${JVAR_DB_USER}
      POSTGRES_PASSWORD: ${JVAR_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${JVAR_DB_INITDB_ARGS}
      POSTGRES_DB: ${JVAR_DB}
      hostname: ${JVAR_DB_HOSTNAME}
      restart: always
      user: ${JVAR_DB_USER}

  file_db_stage:
    image: postgres:12.0
    networks:
      - ddbj_ld_stage
    ports:
      - 15434:5432
    volumes:
      - ${PWD}/data/file_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${FILE_DB_USER}
      POSTGRES_PASSWORD: ${FILE_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${FILE_DB_INITDB_ARGS}
      POSTGRES_DB: ${FILE_DB}
      hostname: ${FILE_DB_HOSTNAME}
      restart: always
      user: ${FILE_DB_USER}

  nextcloud_stage:
    build: ./config/nextcloud
    restart: always
    ports:
      - 18083:80
    volumes:
      - ./data/nextcloud:/var/www/html
    environment:
      POSTGRES_USER: ${FILE_DB_USER}
      POSTGRES_PASSWORD: ${FILE_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${FILE_DB_INITDB_ARGS}
      POSTGRES_DB: ${FILE_DB}
      POSTGRES_HOST: ${FILE_DB_HOSTNAME}
    depends_on:
      - file_db_stage
    networks:
      - ddbj_ld_stage

  batch_stage:
    build:
      context: ${PWD}/batch
    image: ddbj-batch/boot:0.0.1
    depends_on:
      - public_db_stage
      - elasticsearch_stage
      - elasticsearch2_stage
    ports:
      - "8093:8080"
    volumes:
      - ${PWD}/batch:/batch
    environment:
      ES_HOST: elasticsearch_stage
      ES_PORT: 9200
    networks:
      - ddbj_ld_stage

  api_stage:
    image: openjdk:11-slim
    depends_on:
      - public_db_stage
    ports:
      - "8092:8080"
    volumes:
      - ${PWD}/config/entrypoint.api.sh:/usr/local/bin/entrypoint.api.sh
      - ${PWD}/api:/api
    command: ["bash", "/usr/local/bin/entrypoint.api.sh"]
    restart: always
    environment:
      ENV: ${ENV}
    networks:
      - ddbj_ld_stage
    extra_hosts:
      - "gw1:172.19.18.250"

  front_stage:
    image: node:12.12.0
    volumes:
      - "./front:/front"
    working_dir: /front
    command: [sh, -c, yarn install;yarn build;yarn run start]
    ports:
      - "3001:3000"
    restart: always
    networks:
      - ddbj_ld_stage

networks:
  ddbj_ld_stage:
    external: true