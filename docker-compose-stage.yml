version: '3.5'

services:

  elasticsearch_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms30g -Xmx30g"
      path.data: /usr/share/elasticsearch/data
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es01
      discovery.zen.ping.unicast.hosts: elasticsearch2_stage
      node.max_local_storage_nodes: 2
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "19200:9200"
      - "19300:9300"
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PERSISTENCE_DIR}/elasticsearch:/usr/share/elasticsearch/data
      - ${LOG_DIR}/elasticsearch:/usr/share/elasticsearch/logs
    depends_on:
      - elasticsearch2_stage
    restart: always

  elasticsearch2_stage:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: ${DDBJLD_ELASTICSEARCH_PASSWD:-ddbjld_elasticsearch_passwd}
      ES_JAVA_OPTS: "-Xms30g -Xmx30g"
      TAKE_FILE_OWNERSHIP: "true"
      node.name: es02
      path.data: /usr/share/elasticsearch/data
      node.max_local_storage_nodes: 2
      discovery.zen.ping.unicast.hosts: elasticsearch_stage
      cluster.initial_master_nodes: es01
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "19201:9200"
      - "19301:9300"
    user: ${UID:-1000}:${GID:-0}  # 1000:0 is elasticsearch container's default
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    volumes:
      - ${PWD}/docker/elasticsearch:/usr/share/elasticsearch/config
      - ${PWD}/docker/elasticsearch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PERSISTENCE_DIR}/elasticsearch2:/usr/share/elasticsearch/data
      - ${LOG_DIR}/elasticsearch:/usr/share/elasticsearch/log
    restart: always

  public_db_stage:
    image: postgres:13.3
    container_name: ${DDBJLD_POSTGRESQL_CONTAINER_NAME:-ddbjld_public_db_stage}
    ports:
      - "15432:5432"
    volumes:
      - ${PWD}/docker/public_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/public_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PUBLIC_DB_USER}
      POSTGRES_PASSWORD: ${PUBLIC_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${PUBLIC_DB_INITDB_ARGS}
      POSTGRES_DB: ${PUBLIC_DB}
    restart: always

  repos_db_stage:
    image: postgres:13.3
    ports:
      - "15433:5432"
    volumes:
      - ${PWD}/docker/repos_db/init:/docker-entrypoint-initdb.d
      - ${PERSISTENCE_DIR}/repos_db/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${REPOS_DB_USER}
      POSTGRES_PASSWORD: ${REPOS_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${REPOS_DB_INITDB_ARGS}
      POSTGRES_DB: ${REPOS_DB}
    restart: always

  batch_stage:
    build:
      context: ${PWD}/docker/batch
    image: ddbj-batch/boot:0.0.1
    depends_on:
      - public_db_stage
      - elasticsearch_stage
      - elasticsearch2_stage
    volumes:
      - ${PWD}/docker/batch/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/batch:/batch
      - ${DATA_DIR}:/data_dir
      - /lustre9/open/database/ddbjshare/private/ddbj.nig.ac.jp/jga/metadata:/ext_data/jga
      - /usr/local/resources/dra/fastq/:/ext_data/sra/fastq
      - /usr/local/resources/dra/sralite/ByExp/litesra/:/ext_data/sra/sra
      - /mirror/meta/list/livelist:/ext_data/sra/livelist
      - /usr/local/resources/bioproject/ddbj_core_bioproject.xml:/ext_data/bioproject/ddbj_core_bioproject.xml
      - /usr/local/resources/biosample/ddbj_biosample_set.xml.gz:/ext_data/biosample/ddbj_biosample_set.xml.gz
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    environment:
      ES_HOST: elasticsearch_stage
      ES_PORT: 9200
      ACTION: ${ACTION}
      DATE: ${DATE}
    extra_hosts:
      - "dev-xsmdb.ddbj.nig.ac.jp:172.19.7.68"

  api_stage:
    image: ddbj-api/boot:0.0.1
    build:
      context: ${PWD}/docker/api
    depends_on:
      - public_db_stage
      - repos_db_stage
      - elasticsearch_stage
      - elasticsearch2_stage
    ports:
      - "18090:8080"
    volumes:
      - ${PWD}/docker/api/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ${PWD}/api:/api
      - ${PERSISTENCE_DIR}/file:/data
      - /usr/local/resources:/resources
    command: ["bash", "/usr/local/bin/entrypoint.sh"]
    restart: always
    environment:
      ENV: ${ENV}
    extra_hosts:
      - "gw1:172.19.18.250"

  front:
    image: ddbj-ld-front-stage:1
    build:
      context: .
      dockerfile: ./docker/front/production/Dockerfile
      target: runner
    ports:
      - "3000:3000"
    restart: always

networks:
  default:
    name: ddbj_ld_stage
